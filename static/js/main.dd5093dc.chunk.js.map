{"version":3,"sources":["Details.js","App.js","index.js"],"names":["useStyles","makeStyles","root","minHeight","bullet","display","margin","transform","title","fontSize","fontWeight","color","pos","marginBottom","Details","props","classes","displayData","data","map","card","Grid","item","xs","Card","className","variant","CardContent","Typography","gutterBottom","style","height","width","src","images","url","alt","description","App","console","log","useState","setDisplayData","series","entries","filter","entry","programType","movies","container","Button","onClick","size","length","rootElement","document","getElementById","createRoot","render"],"mappings":"809CAQMA,EAAYC,YAAW,CAC3BC,KAAM,CAEJC,UAAW,KAEbC,OAAQ,CACNC,QAAS,eACTC,OAAQ,QACRC,UAAW,cAEbC,MAAO,CACLC,SAAU,GACVC,WAAY,OACZC,MAAO,SAETC,IAAK,CACHC,aAAc,MAqCHC,EAjCC,SAACC,GAAW,IAAD,EACnBC,EAAUhB,IACRiB,EAAgBF,EAAhBE,YAER,cAAOA,QAAP,IAAOA,GAAP,UAAOA,EAAaC,YAApB,aAAO,EAAmBC,KAAI,SAACC,GAAD,eAC5B,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CAAMC,UAAWT,EAAQd,KAAMwB,QAAQ,WAAvC,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEH,UAAWT,EAAQR,MACnBG,MAAM,gBACNkB,cAAY,EAHd,gBAKGT,QALH,IAKGA,OALH,EAKGA,EAAMZ,QAET,qBACEsB,MAAO,CAAEC,OAAQ,GAAIC,MAAO,IAC5BC,IAAG,OAAEb,QAAF,IAAEA,GAAF,UAAEA,EAAMc,cAAR,iBAAE,EAAe,qBAAjB,aAAE,EAA8BC,IACnCC,IAAI,QAEN,cAACR,EAAA,EAAD,CACEE,MAAO,CAAErB,SAAU,IACnBE,MAAM,gBACNkB,cAAY,EAHd,gBAKGT,QALH,IAKGA,OALH,EAKGA,EAAMiB,oBArBa,GA2B/B,ECpDc,SAASC,IACtBC,QAAQC,IAAItB,GACZ,MAAsCuB,mBAAS,CAAC,GAAhD,mBAAOxB,EAAP,KAAoByB,EAApB,KACMC,EAASzB,EAAK0B,QAAQC,QAAO,SAACC,GAAD,MAAiC,WAAtBA,EAAMC,WAAjB,IAC7BC,EAAS9B,EAAK0B,QAAQC,QAAO,SAACC,GAAD,MAAiC,UAAtBA,EAAMC,WAAjB,IAEnC,OACE,eAAC1B,EAAA,EAAD,CAAM4B,WAAS,EAAf,UACE,cAAC5B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,eAAC2B,EAAA,EAAD,CACEC,QAAS,kBAAMT,EAAe,CAAElC,MAAO,SAAUU,KAAMyB,GAA9C,EACTjB,QAAQ,YACR0B,KAAK,QACLzC,MAAM,UAJR,sBAMYgC,EAAOU,YAGrB,cAAChC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,eAAC2B,EAAA,EAAD,CACEC,QAAS,kBAAMT,EAAe,CAAElC,MAAO,SAAUU,KAAM8B,GAA9C,EACTtB,QAAQ,YACR0B,KAAK,QACLzC,MAAM,UAJR,sBAMYqC,EAAOK,YAIrB,cAAChC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,oCAAKN,QAAL,IAAKA,OAAL,EAAKA,EAAaT,UAGpB,cAAC,EAAD,CAASS,YAAaA,MAG3B,CCtCD,IAAMqC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAACpB,EAAD,M","file":"static/js/main.dd5093dc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    // minWidth: 275,\r\n    minHeight: 200\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\"\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    color: \"black\"\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n});\r\n\r\nconst Details = (props) => {\r\n  const classes = useStyles();\r\n  const { displayData } = props;\r\n\r\n  return displayData?.data?.map((card) => (\r\n    <Grid item xs={4}>\r\n      <Card className={classes.root} variant=\"outlined\">\r\n        <CardContent>\r\n          <Typography\r\n            className={classes.title}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            {card?.title}\r\n          </Typography>\r\n          <img\r\n            style={{ height: 50, width: 50 }}\r\n            src={card?.images?.[\"Poster Art\"]?.url}\r\n            alt=\"img\"\r\n          />\r\n          <Typography\r\n            style={{ fontSize: 12 }}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            {card?.description}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  ));\r\n};\r\n\r\nexport default Details;\r\n","import \"./styles.css\";\nimport data from \"./data.json\";\nimport { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Details from \"./Details\";\n\nexport default function App() {\n  console.log(data);\n  const [displayData, setDisplayData] = useState({});\n  const series = data.entries.filter((entry) => entry.programType === \"series\");\n  const movies = data.entries.filter((entry) => entry.programType === \"movie\");\n\n  return (\n    <Grid container>\n      <Grid item xs={6}>\n        <Button\n          onClick={() => setDisplayData({ title: \"Series\", data: series })}\n          variant=\"contained\"\n          size=\"small\"\n          color=\"primary\"\n        >\n          Series - {series.length}\n        </Button>\n      </Grid>\n      <Grid item xs={6}>\n        <Button\n          onClick={() => setDisplayData({ title: \"Movies\", data: movies })}\n          variant=\"contained\"\n          size=\"small\"\n          color=\"primary\"\n        >\n          Movies - {movies.length}\n        </Button>\n      </Grid>\n\n      <Grid item xs={12}>\n        <h1>{displayData?.title}</h1>\n      </Grid>\n\n      <Details displayData={displayData} />\n    </Grid>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}